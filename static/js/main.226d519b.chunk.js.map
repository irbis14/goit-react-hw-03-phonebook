{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactsItem/ContactsItem.module.css","components/Contacts/Contacts.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Contacts/Contacts.js","components/ContactsItem/ContactsItem.js","App.js","index.js"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","styles","form","this","label","htmlFor","input","type","pattern","title","required","onChange","button","Component","Filter","onChangeFilter","filter__container","Contacts","children","list","ContactsItem","items","onDeleteContact","map","item","list__item","button__delete","onClick","id","proptypes","PropTypes","shape","string","isRequired","func","App","contacts","filter","addContact","newContact","contact","uuidv4","find","oldContact","toLowerCase","alert","prevState","filterContact","normalizedFilter","includes","deleteContact","deleteName","restContacts","initialContacts","JSON","parse","localStorage","getItem","setItem","stringify","filteredContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,8B,uBCAlID,EAAOC,QAAU,CAAC,kBAAoB,kCAAkC,MAAQ,sBAAsB,MAAQ,wB,iBCA9GD,EAAOC,QAAU,CAAC,WAAa,iCAAiC,eAAiB,uC,iBCAjFD,EAAOC,QAAU,CAAC,KAAO,yB,sMCEnBC,EAAgB,CACpBC,KAAM,GACNC,OAAQ,IA4DKC,E,4MAxDbC,M,eAAaJ,G,EAEbK,aAAe,SAACC,GACd,MAAwBA,EAAEC,OAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBR,EAAOO,K,EAG1BE,aAAe,SAACJ,GACdA,EAAEK,iBAEF,EAAKC,MAAMC,SAAS,EAAKT,OAEzB,EAAKU,S,EAGPA,MAAQ,WACN,EAAKL,SAAL,eAAmBT,K,4CAGrB,WACE,OACE,uBAAMe,UAAWC,IAAOC,KAAMJ,SAAUK,KAAKR,aAA7C,UACE,wBAAOK,UAAWC,IAAOG,MAAOC,QAAQ,OAAxC,iBAEE,uBACEL,UAAWC,IAAOK,MAClBC,KAAK,OACLrB,KAAK,OACLsB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRjB,MAAOU,KAAKd,MAAMH,KAClByB,SAAUR,KAAKb,kBAGnB,wBAAOU,UAAWC,IAAOG,MAAzB,mBAEE,uBACEJ,UAAWC,IAAOK,MAClBC,KAAK,MACLrB,KAAK,SACLsB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRjB,MAAOU,KAAKd,MAAMF,OAClBwB,SAAUR,KAAKb,kBAGnB,wBAAQU,UAAWC,IAAOW,OAAQL,KAAK,SAAvC,gC,GAjDkBM,a,iBCkBXC,EAvBA,SAAC,GAA+B,IAA7BrB,EAA4B,EAA5BA,MAAOsB,EAAqB,EAArBA,eACvB,OACE,qBAAKf,UAAWC,IAAOe,kBAAvB,SACE,wBAAOX,QAAQ,SAASL,UAAWC,IAAOG,MAA1C,kCAEE,uBACEJ,UAAWC,IAAOK,MAClBC,KAAK,OACLrB,KAAK,SACLsB,QAAQ,yHACRf,MAAOA,EACPkB,SAAUI,U,iBCRLE,EAJE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,OAAO,oBAAIlB,UAAWC,IAAOkB,KAAtB,SAA6BD,K,iCCAhCE,EAAe,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,gBAC7B,OAAOD,EAAME,KAAI,SAACC,GAChB,OACE,qBAAkBxB,UAAWC,IAAOwB,WAApC,UACGD,EAAKtC,KADR,KACgBsC,EAAKrC,OACnB,wBACED,KAAMsC,EAAKtC,KACXqB,KAAK,SACLP,UAAWC,IAAOyB,eAClBC,QAASL,EAJX,sBAFOE,EAAKI,QAepBR,EAAaS,UAAY,CACvBR,MAAOS,IAAUC,MAAM,CACrBH,GAAIE,IAAUE,OAAOC,WACrB/C,KAAM4C,IAAUE,OAAOC,WACvB9C,OAAQ2C,IAAUE,OAAOC,aAE3BX,gBAAiBQ,IAAUI,MAGdd,Q,QCgEAe,G,kNAnFb9C,MAAQ,CACN+C,SAAU,GACVC,OAAQ,I,EAGVC,WAAa,SAACC,GACZ,IAAMC,EAAO,aACXZ,GAAIa,eACDF,GAKH,EAAKlD,MAAM+C,SAASM,MAAK,SAACC,GACxB,OAAOA,EAAWzD,KAAK0D,gBAAkBJ,EAAQtD,KAAK0D,iBAGxDC,MAAM,GAAD,OAAIL,EAAQtD,KAAZ,4BAEL,EAAKQ,UAAS,SAACoD,GACb,MAAO,CACLV,SAAS,GAAD,mBAAMU,EAAUV,UAAhB,CAA0BI,S,EAM1CzB,eAAiB,SAACxB,GAChB,EAAKG,SAAS,CAAE2C,OAAQ9C,EAAEC,OAAOC,S,EAGnCsD,cAAgB,WACd,MAA6B,EAAK1D,MAA1B+C,EAAR,EAAQA,SACFY,EADN,EAAkBX,OACcO,cAChC,OAAOR,EAASC,QAAO,SAACG,GAAD,OACrBA,EAAQtD,KAAK0D,cAAcK,SAASD,O,EAIxCE,cAAgB,SAAC3D,GACf,IAAQ6C,EAAa,EAAK/C,MAAlB+C,SACFe,EAAa5D,EAAEC,OAAON,KACtBkE,EAAehB,EAASC,QAC5B,SAACG,GAAD,OAAaA,EAAQtD,OAASiE,KAEhC,EAAKzD,SAAS,CACZ0C,SAAUgB,K,uDAId,WACE,IAAMC,EAAkBC,KAAKC,MAAMC,aAAaC,QAAQ,YACpDJ,GACFlD,KAAKT,SAAS,CAAE0C,SAAUiB,M,gCAI9B,SAAmBP,GACb3C,KAAKd,MAAM+C,WAAaU,EAAUV,UACpCoB,aAAaE,QAAQ,UAAWJ,KAAKK,UAAUxD,KAAKd,MAAM+C,a,oBAI9D,WACE,IAAQC,EAAWlC,KAAKd,MAAhBgD,OACFuB,EAAkBzD,KAAK4C,gBAE7B,OACE,gCACE,2CACA,cAAC,EAAD,CAAajD,SAAUK,KAAKmC,aAC5B,cAAC,EAAD,CAAQvB,eAAgBZ,KAAKY,eAAgBtB,MAAO4C,IACpD,cAAC,EAAD,UACE,cAAC,EAAD,CACEhB,MAAOuC,EACPtC,gBAAiBnB,KAAK+C,yB,GA5EhBrC,cCLlBgD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.226d519b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__25yNj\",\"label\":\"ContactForm_label__Db7q5\",\"input\":\"ContactForm_input__3mvOH\",\"button\":\"ContactForm_button__3o8lX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__container\":\"Filter_filter__container__1F54v\",\"label\":\"Filter_label__2a2oE\",\"input\":\"Filter_input__1110D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list__item\":\"ContactsItem_list__item__2lS1R\",\"button__delete\":\"ContactsItem_button__delete__2S1tK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__3b1tW\"};","import { Component } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = { ...INITIAL_STATE };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.label} htmlFor=\"name\">\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <div className={styles.filter__container}>\r\n      <label htmlFor=\"filter\" className={styles.label}>\r\n        Find contacts by name\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          value={value}\r\n          onChange={onChangeFilter}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChangeFilter: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import styles from \"./Contacts.module.css\";\r\n\r\nconst Contacts = ({ children }) => {\r\n  return <ul className={styles.list}>{children}</ul>;\r\n};\r\n\r\nexport default Contacts;\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./ContactsItem.module.css\";\r\n\r\nconst ContactsItem = ({ items, onDeleteContact }) => {\r\n  return items.map((item) => {\r\n    return (\r\n      <li key={item.id} className={styles.list__item}>\r\n        {item.name}: {item.number}\r\n        <button\r\n          name={item.name}\r\n          type=\"button\"\r\n          className={styles.button__delete}\r\n          onClick={onDeleteContact}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n};\r\n\r\nContactsItem.proptypes = {\r\n  items: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactsItem;\r\n","import { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport Contacts from \"./components/Contacts\";\nimport ContactsItem from \"./components/ContactsItem\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  addContact = (newContact) => {\n    const contact = {\n      id: uuidv4(),\n      ...newContact,\n    };\n\n    // Проверка на дублирование имени контакта\n    if (\n      this.state.contacts.find((oldContact) => {\n        return oldContact.name.toLowerCase() === contact.name.toLowerCase();\n      })\n    ) {\n      alert(`${contact.name} is already in contacts`);\n    } else {\n      this.setState((prevState) => {\n        return {\n          contacts: [...prevState.contacts, contact],\n        };\n      });\n    }\n  };\n\n  onChangeFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  filterContact = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  deleteContact = (e) => {\n    const { contacts } = this.state;\n    const deleteName = e.target.name;\n    const restContacts = contacts.filter(\n      (contact) => contact.name !== deleteName\n    );\n    this.setState({\n      contacts: restContacts,\n    });\n  };\n\n  componentDidMount() {\n    const initialContacts = JSON.parse(localStorage.getItem(\"contact\"));\n    if (initialContacts) {\n      this.setState({ contacts: initialContacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contact\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const filteredContact = this.filterContact();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <Filter onChangeFilter={this.onChangeFilter} value={filter} />\n        <Contacts>\n          <ContactsItem\n            items={filteredContact}\n            onDeleteContact={this.deleteContact}\n          />\n        </Contacts>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}